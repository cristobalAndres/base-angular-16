name: CI Pipeline qa
on:
  workflow_dispatch:
  push:
    branches: ['master']
  pull_request:
    branches: [master]

jobs:
  get-vault-aws-credentials:
    name: Get AWS credentials from Vault
    uses: Cencosud-Cencopay/workflows/.github/workflows/aws-credentials.yml@master
    secrets: inherit

  build-and-push:
    name: Build and push Docker image
    needs: [get-vault-aws-credentials]
    runs-on: cencopay-anubis
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ needs.get-vault-aws-credentials.outputs.aws_access_key_id }}
          aws-secret-access-key: ${{ needs.get-vault-aws-credentials.outputs.aws_secret_access_key }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cw-cl-backoffice-web-manager
          IMAGE_TAG: ${{ github.sha }}-prod
        run: |
          env
          docker build --build-arg ANGULAR_PUBLIC_ENV=${GITHUB_REF#refs/heads/} -t $ECR_REGISTRY/$ECR_REPOSITORY:prod -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}-prod .
          docker image push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
  kustomize:
    name: Deploy kustomize
    needs: build-and-push
    uses: Cencosud-Cencopay/workflows/.github/workflows/kustomize.yml@master
    with:
      project_name: 'cw-cl-backoffice-web-manager'
      ecr_repository: 'cw-cl-backoffice-web-manager'
      image_tag: ${{ github.sha }}-prod
      deploy_enviroment: master
    secrets: inherit
